{
  "uid" : "5d8f239e90aedcb7",
  "name" : "验证新增二级部门",
  "fullName" : "testcase.enterprise.base_information.test_base_information_dept.TestBaseInformationDept#test_dept_add",
  "historyId" : "cd17d92672e003499ddeffed9fd35984",
  "time" : {
    "start" : 1675761457753,
    "stop" : 1675761458019,
    "duration" : 266
  },
  "description" : "输入部门名称、上级部门新增二级部门",
  "descriptionHtml" : "<p>输入部门名称、上级部门新增二级部门</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: 'NoneType' object is not subscriptable",
  "statusTrace" : "self = <testcase.enterprise.base_information.test_base_information_dept.TestBaseInformationDept object at 0x7fa5018a5eb8>\ncase_info = [3, '部门接口/新增接口', '验证新增二级部门', '输入部门名称、上级部门新增二级部门', '正向用例', 1, ...]\n\n    @allure.story('新增部门') # story：三级目录，一般描述具体接口功能目录\n    # 缺陷等级：blocker：中断缺陷  critical：临界缺陷  normal：普通缺陷  minor：次要缺陷  trivial：轻微缺陷\n    @allure.severity(allure.severity_level.BLOCKER)\n    # @pytest.mark.parametrize参数化装饰器：传参1：对象名称  2：文件路径\n    @pytest.mark.parametrize('case_info',\n                             GetExcel.ReadAllExcel(GetFilePath.get_file_all_path('testdata/数据设置/部门管理(基础数据).xlsx'),\n                                                     '新增'))\n    def test_dept_add(self,case_info):\n    \t\"\"\"\n    \t        部门接口/新增接口\n    \t        :param storetoken： 前置：获取登录门店后的token和门店ID\n    \t        :param connectdb： 前置：连接数据库\n    \t        :param caseinfo： 参数化变量（部门接口/新增接口测试用例）\n    \t        :return: 成功新增部门\n    \t        \"\"\"\n    \t# ID、模块/接口名称、用例标题、描述、用例性质、优先级、接口地址、请求参数类型、请求方式、前置条件\n    \t# 请求参数、请求头、步骤、预期结果code、预期结果message、预期结果name、预期结果数据库、sql、断言标记assertmarker、postposition后置\n    \tindex, api_name, case_title, desc, case_nature, priority, \\\n    \tapi_url, data_type, method, preconditions, parameter, header, step, except_code, \\\n    \texcept_message, except_data, sql, assert_mark, post_position = case_info\n    \tallure.dynamic.title(case_title)  # 用例标题\n    \tallure.dynamic.description(desc)  # 用例描述\n    \tparameter = eval(parameter)\n    \tcase.name = \"Auto部门\"\n    \tcase.parentId = \"0\"\n    \trequest_data = baseRequest.set_request(\n    \t\tapiurl=case_info[CaseDesc.apiurl_col],\n    \t\tmethod=case_info[CaseDesc.method_col],\n    \t\tdatatype=case_info[CaseDesc.datatype_col],\n    \t\tbody=json.loads(case.replace_data(case_info[CaseDesc.parameter_col])))\n    \tresponse_results = baseRequest.SendRequest(request_data)\n    \tprint(request_data)\n>   \tassert response_results['data']['id'] == \"1234456667\"\nE    TypeError: 'NoneType' object is not subscriptable\n\ntestcase/enterprise/base_information/test_base_information_dept.py:73: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "输入部门名称、上级部门新增二级部门",
    "status" : "broken",
    "statusMessage" : "TypeError: 'NoneType' object is not subscriptable",
    "statusTrace" : "self = <testcase.enterprise.base_information.test_base_information_dept.TestBaseInformationDept object at 0x7fa5018a5eb8>\ncase_info = [3, '部门接口/新增接口', '验证新增二级部门', '输入部门名称、上级部门新增二级部门', '正向用例', 1, ...]\n\n    @allure.story('新增部门') # story：三级目录，一般描述具体接口功能目录\n    # 缺陷等级：blocker：中断缺陷  critical：临界缺陷  normal：普通缺陷  minor：次要缺陷  trivial：轻微缺陷\n    @allure.severity(allure.severity_level.BLOCKER)\n    # @pytest.mark.parametrize参数化装饰器：传参1：对象名称  2：文件路径\n    @pytest.mark.parametrize('case_info',\n                             GetExcel.ReadAllExcel(GetFilePath.get_file_all_path('testdata/数据设置/部门管理(基础数据).xlsx'),\n                                                     '新增'))\n    def test_dept_add(self,case_info):\n    \t\"\"\"\n    \t        部门接口/新增接口\n    \t        :param storetoken： 前置：获取登录门店后的token和门店ID\n    \t        :param connectdb： 前置：连接数据库\n    \t        :param caseinfo： 参数化变量（部门接口/新增接口测试用例）\n    \t        :return: 成功新增部门\n    \t        \"\"\"\n    \t# ID、模块/接口名称、用例标题、描述、用例性质、优先级、接口地址、请求参数类型、请求方式、前置条件\n    \t# 请求参数、请求头、步骤、预期结果code、预期结果message、预期结果name、预期结果数据库、sql、断言标记assertmarker、postposition后置\n    \tindex, api_name, case_title, desc, case_nature, priority, \\\n    \tapi_url, data_type, method, preconditions, parameter, header, step, except_code, \\\n    \texcept_message, except_data, sql, assert_mark, post_position = case_info\n    \tallure.dynamic.title(case_title)  # 用例标题\n    \tallure.dynamic.description(desc)  # 用例描述\n    \tparameter = eval(parameter)\n    \tcase.name = \"Auto部门\"\n    \tcase.parentId = \"0\"\n    \trequest_data = baseRequest.set_request(\n    \t\tapiurl=case_info[CaseDesc.apiurl_col],\n    \t\tmethod=case_info[CaseDesc.method_col],\n    \t\tdatatype=case_info[CaseDesc.datatype_col],\n    \t\tbody=json.loads(case.replace_data(case_info[CaseDesc.parameter_col])))\n    \tresponse_results = baseRequest.SendRequest(request_data)\n    \tprint(request_data)\n>   \tassert response_results['data']['id'] == \"1234456667\"\nE    TypeError: 'NoneType' object is not subscriptable\n\ntestcase/enterprise/base_information/test_base_information_dept.py:73: TypeError",
    "steps" : [ {
      "name" : "发起请求",
      "time" : {
        "start" : 1675761457754,
        "stop" : 1675761458019,
        "duration" : 265
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "data",
        "value" : "{'url': 'https://proenterprisetest.mrrjvip.com/mrkj-enterprise-service/enterpriseServicebasedata/dept/add', 'method': 'POST', 'headers': {'Authorization': 'eyJhbGciOiJIUzUxMiJ9.eyJ1c2VyX2lkIjoxNjE5NTE0MjIxNDMyMjIxNzk0LCJ1c2VyX2tleSI6Ijc3YTcyOGRlLWI3ZjAtNGMwNS1hZDFlLTU0MDdkZTNjM2E4MiIsImVudGVycHJpc2VfaWQiOjE2MTk1MTQ0MjA5ODE1OTYyMDUsInVzZXJuYW1lIjoiMTkxOTYxMjAwMDAifQ.8wP1SixkdlScckq_AaFACUFfDfr8X-RBmrAQhGmF_CyAIDCQUMWhi8byKwZ2Hur0TZN7C49aO94QTEkX5jvzCw'}, 'json': {'name': 'Auto部门', 'parentId': '0', 'status': 1}}"
      } ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "4b248f0e6595278c",
      "name" : "log",
      "source" : "4b248f0e6595278c.txt",
      "type" : "text/plain",
      "size" : 1142
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "茂日Pro企业版：数据设置"
  }, {
    "name" : "feature",
    "value" : "部门设置"
  }, {
    "name" : "story",
    "value" : "新增部门"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "parentSuite",
    "value" : "testcase.enterprise.base_information"
  }, {
    "name" : "suite",
    "value" : "test_base_information_dept"
  }, {
    "name" : "subSuite",
    "value" : "TestBaseInformationDept"
  }, {
    "name" : "host",
    "value" : "zhuoyandeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "4172-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.enterprise.base_information.test_base_information_dept"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_info",
    "value" : "[3, '部门接口/新增接口', '验证新增二级部门', '输入部门名称、上级部门新增二级部门', '正向用例', 1, '/mrkj-enterprise-service/enterpriseServicebasedata/dept/add', 'json', 'POST', '1、登录门店', '{\"name\":\"#name#\",\"parentId\":\"#parentId#\",\"status\":1}', '门店token', '1、正确输入接口地址\\n2、输入请求参数\\n3、查看响应body是否正确并新增部门成功', 0, '请求成功', '#name#、#parentId#', '是', 0, '是']"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5d8f239e90aedcb7.json",
  "parameterValues" : [ "[3, '部门接口/新增接口', '验证新增二级部门', '输入部门名称、上级部门新增二级部门', '正向用例', 1, '/mrkj-enterprise-service/enterpriseServicebasedata/dept/add', 'json', 'POST', '1、登录门店', '{\"name\":\"#name#\",\"parentId\":\"#parentId#\",\"status\":1}', '门店token', '1、正确输入接口地址\\n2、输入请求参数\\n3、查看响应body是否正确并新增部门成功', 0, '请求成功', '#name#、#parentId#', '是', 0, '是']" ]
}